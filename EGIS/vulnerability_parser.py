import csv
from io import StringIO
from datetime import datetime
from loguru import logger

class VulnerabilityParser:
    def __init__(self, csv_content, scan_name):
        self.csv_content = csv_content.decode('utf-8')
        self.scan_name = scan_name
        logger.debug(f"Initializing vulnerability parser for scan: {scan_name}")

    def parse(self):
        #Parse CSV content into vulnerability objects
        logger.info("Parsing CSV vulnerability data")
        csv_file = StringIO(self.csv_content)
        reader = csv.DictReader(csv_file)
        vulnerabilities = []

        for row in reader:
            vuln = {
                "@timestamp": datetime.now().isoformat(),
                "scan_name": self.scan_name,
                "host": row.get("Host", ""),
                "plugin_id": row.get("Plugin ID", ""),
                "name": row.get("Name", ""),
                "risk": row.get("Risk", ""),
                "cvss_base_score": float(row.get("CVSS Base Score", 0)),
                "cvss3_base_score": float(row.get("CVSS3 Base Score", 0)),
                "cve": row.get("CVE", "").split(","),
                "description": row.get("Description", ""),
                "solution": row.get("Solution", ""),
                "port": row.get("Port", ""),
                "protocol": row.get("Protocol", ""),
                "synopsis": row.get("Synopsis", ""),
                "see_also": row.get("See Also", "").split("\n"),
                "plugin_output": row.get("Plugin Output", "")
            }
            vulnerabilities.append(vuln)

        logger.info(f"Parsed {len(vulnerabilities)} vulnerabilities from CSV")
        return vulnerabilities 